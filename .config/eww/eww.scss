@use "sass:map";

// $base-background: #000000;
$background: (
    "static": #272538,
    // "normal": #292e42,
    "normal": #24293b,
    "good": #272d2d,
    "warning": #2e2a2d,
    "critical": #2d202a,
    "focus": #2d2d3b,
    "darker": #16161e,
    "dark": #1a1b26,
);
$accent: (
    "static": #9d7cd8,
    "normal": #7aa2f7,
    "good": #9ece6a,
    "warning": #e0af68,
    "critical": #db4b4b,
    "focus": #c0caf5,
);
$inactive: (
    "static": #5c4c7f,
    "normal": #4a5f8f,
    "good": #5c7548,
    "warning": #7d6547,
    "critical": #7b3339,
    "focus": #6d738e,
    "dark": #565f89,
);
$hover: (
    "static": #322c46,
    "normal": #2b334c,
    "good": #323a21,
    "warning": #3e3632,
    "critical": #3d242d,
    "focus": #383b4b,
);

* { all: unset; }

.bar {
    font-family: remixicon, Manrope;
    font-size: 12px;
    transition-duration: 200ms;
    transition-timing-function: ease-out;
    transition-property: all;
    button {
        transition: background-color 120ms, color 50ms;
    }
    * {
        border-radius: 3px;
    }
}

.group {
    padding: 10px;
}

// .group + .eventbox {
//     margin: 10px 0;
// }

.icon {
    font-size: 16px;
}

.info {
    padding: 0px 5px;
}

.disabled {
    background-color: map.get($background, "dark");
    color: map.get($inactive, "dark");
    highlight {
        background-color: map.get($inactive, "dark");
    }
}

@each $type in "normal", "warning", "critical", "static", "good", "focus" {
    .#{$type}.disabled button:hover:not(:active) {
        background-color: map.get($background, $type);
    }
    .#{$type}:not(.disabled) {
        background-color: map.get($background, $type);
        color: map.get($accent, $type);
        button:hover:not(:active) {
            background-color: map.get($hover, $type);
            .icon {
                color: map.get($hover, $type);
            }
        }
        .icon {
            background-color: map.get($accent, $type);
            color: map.get($background, $type);
        }
        .inactive {
            color: map.get($inactive, $type);
        }
        .slider highlight {
            background-color: map.get($accent, $type);
        }
    }
}

.workspace .title, .bluetooth .alias {
    font-size: 11px;
    padding: 0 5px 0 0;
}

.media .info {
    font-size: 11px;
}

.media button {
    font-size: 15px;
}

.media .controls {
    margin: 0 3px;
}

.slider {
    margin-left: 2px;
    min-width: 60px;
    highlight {
        min-height: 20px;
    }
}

.workspace {
    button:hover:not(:active) {
        background-color: map.get($hover, "normal")
    }
    &.active {
        background-color: map.get($background, "normal");
        color: map.get($accent, "normal");
        .header, .header:hover:not(:active) {
            background-color: map.get($accent, "normal");
            color: map.get($background, "normal");
        }
    }
    &:not(.active) {
        background-color: map.get($background, "dark");
        color: map.get($inactive, "dark");
        .header:hover:not(:active), button:hover:not(:active) {
            background-color: map.get($background, "normal");
        }
    }
}

$power-item-type-map: (
    "shutdown": "critical",
    "reboot": "warning",
    "logout": "good",
    "lock": "normal",
    "suspend": "static",
);

.power {
    @each $item, $type in $power-item-type-map {
        .#{$item} {
            background-color: map.get($background, $type);
            color: map.get($accent, $type);
            &:hover {
                background-color: map.get($accent, $type);
                color: map.get($background, $type);
            }
        }
    }
}

.todolist {
    padding: 10px 5px 0 12px;
    background-color: map.get($background, "darker");
}

.todo {
    transition: transform 200ms;
    padding: 0px 7px;
    border-radius: 10px 3px 3px 10px;
    background-color: map.get($background, "dark");
    color: map.get($inactive, "dark");
    :first-child {
        min-height: 6px;
        min-width: 6px;
        border-radius: 3px;
        margin: 7px 0px;
        background-color: map.get($inactive, "dark");
    }
    :hover {
        background-color: map.get($background, "normal");
        color: map.get($accent, "normal");
        :first-child {
            background-color: map.get($accent, "normal");
        }
    }
}
